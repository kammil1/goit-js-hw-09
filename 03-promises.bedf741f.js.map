{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAAeJ,SAASK,iBAAiB,mBACzCC,EAASN,SAASC,cAAc,mBAatCF,EAAKQ,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,IAAIC,EAAkB,EAEtBC,YAAW,KACT,MAAMC,EAAUC,aAAY,KAC1B,GAAIH,GAAmBJ,EAAOQ,MAK5B,OAJAC,cAAcH,QACdR,EAAaY,SAAQC,IACnBA,EAAMH,MAAQ,EAAE,KApB1B,SAAuBI,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,qBAAqBN,QAAeC,OAE5CM,EAAO,oBAAoBP,QAAeC,MAAU,G,EAmBpDO,CACEhB,EAAkB,EAClBiB,SAASzB,EAAMY,OAASa,SAASxB,EAAKW,OAASJ,GAE9CkB,MAAKC,GAAYC,EAAAjC,GAASkC,OAAOC,QAAQH,KACzCI,OAAMC,GAAYJ,EAAAjC,GAASkC,OAAOI,QAAQD,KAC7CxB,GAAiB,GAChBP,EAAKW,MAAM,GACbZ,EAAMY,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector(\"[name='delay']\");\nconst step = document.querySelector(\"[name='step']\");\nconst numberInputs = document.querySelectorAll(\"[type='number']\");\nconst amount = document.querySelector(\"[name='amount']\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(`Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let createdPromises = 0;\n\n  setTimeout(() => {\n    const timerId = setInterval(() => {\n      if (createdPromises >= amount.value) {\n        clearInterval(timerId);\n        numberInputs.forEach(input => {\n          input.value = '';\n        });\n        return;\n      }\n\n      createPromise(\n        createdPromises + 1,\n        parseInt(delay.value) + parseInt(step.value) * createdPromises\n      )\n        .then(resolved => Notiflix.Notify.success(resolved))\n        .catch(rejected => Notiflix.Notify.failure(rejected));\n      createdPromises++;\n    }, step.value);\n  }, delay.value);\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$numberInputs","querySelectorAll","$47d4ff9957288465$var$amount","addEventListener","event","preventDefault","createdPromises","setTimeout","timerId","setInterval","value","clearInterval","forEach","input","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","parseInt","then","resolved","$parcel$interopDefault","Notify","success","catch","rejected","failure"],"version":3,"file":"03-promises.bedf741f.js.map"}